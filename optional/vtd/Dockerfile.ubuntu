# syntax = docker/dockerfile:1.4.3
# Dockerfile
#
# This file acts as a Docker recipe for building cloe-plugin-vtd on Ubuntu.
# It uses the base image from Cloe to reduce overhead.
ARG IMAGE_BASE=cloe/cloe-engine
ARG PROJECT_VERSION
ARG UBUNTU_VERSION
ARG IMAGE_VERSION=${PROJECT_VERSION}-ubuntu-${UBUNTU_VERSION}

# This is a work-around to not being able to use variables in RUN --mount=from:
# If you want to use VTD in this image, you need to specify the Docker image
# containing the distribution that can be mounted at /root/.conan/data/
ARG VTD_IMAGE=scratch
FROM ${VTD_IMAGE} as vtd
WORKDIR /vtd

FROM ${IMAGE_BASE}:${IMAGE_VERSION} as stage-vendor
WORKDIR /cloe-vtd
ARG KEEP_SOURCES=0

# Download vendor packages:
COPY vendor /cloe-vtd/vendor
COPY Makefile /cloe-vtd
COPY conanfile.py /cloe-vtd
ARG VENDOR_TARGET="export-vendor download-vendor"
RUN --mount=type=cache,target=/ccache \
    --mount=type=secret,target=/root/setup.sh,id=setup,mode=0400 \
    --mount=type=bind,target=/root/.conan/data/vtd,source=/vtd,from=vtd,rw \
    if [ -r /root/setup.sh ]; then . /root/setup.sh; fi && \
    conan search && \
    cat /root/.conan/data/vtd/2.2.0/cloe-restricted/stable/metadata.json && \
    make PROJECT_ROOT=/cloe ${VENDOR_TARGET} && \
    # Clean up:
    conan user --clean && \
    if [ ${KEEP_SOURCES} -eq 0 ]; then \
        find /root/.conan/data -name dl -type d -maxdepth 5 -exec rm -r {} + && \
        conan remove \* -s -b -f; \
    else \
        conan remove \* -b -f; \
    fi

# Build cloe-plugin-vtd package:
FROM stage-vendor as stage-package
COPY . /cloe-vtd
ARG PROJECT_VERSION=unknown
ARG PACKAGE_TARGET="package"
RUN --mount=type=cache,target=/ccache \
    --mount=type=secret,target=/root/setup.sh,id=setup,mode=0400 \
    --mount=type=bind,target=/root/.conan/data/vtd,source=/vtd,from=vtd,rw \
    if [ -r /root/setup.sh ]; then . /root/setup.sh; fi && \
    conan search && \
    echo "${PROJECT_VERSION}" > /cloe-vtd/VERSION && \
    make PROJECT_ROOT=/cloe ${PACKAGE_TARGET} && \
    # Clean up:
    conan user --clean && \
    if [ ${KEEP_SOURCES} -eq 0 ]; then \
        find /root/.conan/data -name dl -type d -maxdepth 5 -exec rm -r {} + && \
        conan remove \* -s -b -f; \
    else \
        conan remove \* -b -f; \
    fi

# Build smoketest dependencies (in case they are different):
FROM stage-package as stage-smoketest-deps
RUN --mount=type=cache,target=/ccache \
    --mount=type=secret,target=/root/setup.sh,id=setup,mode=0400 \
    --mount=type=bind,target=/root/.conan/data/vtd,source=/vtd,from=vtd,rw \
    if [ -r /root/setup.sh ]; then . /root/setup.sh; fi && \
    make PROJECT_ROOT=/cloe smoketest-deps && \
    # Clean up:
    conan user --clean && \
    if [ ${KEEP_SOURCES} -eq 0 ]; then \
        find /root/.conan/data -name dl -type d -maxdepth 5 -exec rm -r {} + && \
        conan remove \* -s -b -f; \
    else \
        conan remove \* -b -f; \
    fi
