# Dockerfile.xenial
#
# See Dockerfile.focal for documentation of each of the lines.
ARG BUILD_FROM=ubuntu:16.04
ARG DEPLOY_FROM=${BUILD_FROM}

FROM ${BUILD_FROM} AS build

# Install Newer CMake and GCC Packages
RUN apt-get update && \
    apt-get install --no-install-recommends -y apt-transport-https ca-certificates gnupg software-properties-common wget && \
    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - > /etc/apt/trusted.gpg.d/kitware.gpg && \
    apt-add-repository "deb https://apt.kitware.com/ubuntu/ xenial main" && \
    add-apt-repository "ppa:ubuntu-toolchain-r/test" && \
    # Install packages:
    apt-get update && \
    export DEBIAN_FRONTEND=noninteractive && \
    apt-get install --no-install-recommends -y gcc-8 g++-8 cmake && \
    rm -rf /var/lib/apt/lists/*

# Install Pyenv
RUN apt-get update && \
    apt-get install --no-install-recommends -y \
        build-essential \
        curl \
        git \
        libbz2-dev \
        libffi-dev \
        liblzma-dev \
        libncurses5-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        libxml2-dev \
        libxmlsec1-dev \
        llvm \
        make \
        tk-dev \
        wget \
        xz-utils \
        zlib1g-dev \
    && \
    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash && \
    echo 'export PATH="/root/.pyenv/bin:$PATH"' >> /etc/profile.d/pyenv.sh && \
    echo 'eval "$(pyenv init -)"' >> /etc/profile.d/pyenv.sh && \
    echo 'eval "$(pyenv virtualenv-init -)"' >> /etc/profile.d/pyenv.sh && \
    rm -rf /var/lib/apt/lists/*

ARG PYTHON_VERSION=3.6.13
RUN . /etc/profile.d/pyenv.sh && \
    pyenv install ${PYTHON_VERSION} && \
    pyenv global ${PYTHON_VERSION}

# Install System Packages
COPY Makefile.setup /cloe/Makefile.setup
RUN apt-get update && \
    apt-get install -y make locales && \
    make -f /cloe/Makefile.setup \
        WITHOUT_DEV_DEPS=yes \
        DEBIAN_FRONTEND=noninteractive \
        APT_ARGS="--no-install-recommends -y" \
        install-system-deps \
        && \
    locale-gen en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*

RUN . /etc/profile.d/pyenv.sh && \
    pip install --upgrade pip && \
    make -f /cloe/Makefile.setup \
        PIP_INSTALL_ARGS="" \
        install-python-deps

# Install and Setup Conan
ARG CONAN_REMOTE=https://conan.bintray.com
ARG CONAN_REMOTE_VERIFY_SSL=true
ARG CONAN_LOGIN_USERNAME
ARG CONAN_PASSWORD
RUN . /etc/profile.d/pyenv.sh && \
    conan profile new --detect default && \
    conan profile update settings.compiler.libcxx=libstdc++11 default && \
    conan config set general.request_timeout=360 && \
    conan remote clean && \
    conan remote add default ${CONAN_REMOTE} ${CONAN_REMOTE_VERIFY_SSL}

# Build and Install Cloe
WORKDIR /cloe
COPY . /cloe
ARG WITH_VTD=0
ARG PACKAGE_TARGET=package-select
RUN . /etc/profile.d/pyenv.sh && \
    export CONAN_NON_INTERACTIVE=yes && \
    if [ ${CONAN_LOGIN_USERNAME} != "" ]; then \
        CONAN_LOGIN_USERNAME="${CONAN_LOGIN_USERNAME}" CONAN_PASSWORD="${CONAN_PASSWORD}" conan user --remote=default -p || exit 1; \
    fi && \
    make export-vendor export && \
    make WITH_VTD=${WITH_VTD} ${PACKAGE_TARGET} && \
    conan remove \* -b -f && \
    conan user --clean

ARG VI_LIC_SERVER
RUN . /etc/profile.d/pyenv.sh && \
    export LC_ALL=C.UTF-8 LANG=C.UTF-8 && \
    export VI_LIC_SERVER="${VI_LIC_SERVER}" && \
    make WITH_VTD=${WITH_VTD} smoketest && \
    make WITH_VTD=${WITH_VTD} INSTALL_DIR="/deploy" deploy

# Create Deploy Image
FROM ${DEPLOY_FROM}
COPY --from=build /deploy /usr/local/
ENV LD_LIBRARY_PATH=/usr/local/lib
ENTRYPOINT [ "cloe-engine" ]
